swagger: "2.0"
info:
  description: "This is a Booking API for Hotels"
  version: "0.0.1"
  title: "Booking API"
host: "localhost:8080"
tags:
- name: "Booking"
  description: "Booking resources"
schemes:
- "http"
paths:
  /bookings:
    post:
      tags:
      - "Booking"
      summary: "Create"
      description: "Create a booking"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Booking object"
        required: true
        schema:
          $ref: "#/definitions/BookingRequest"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/BookingResponse"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
      - "Booking"
      summary: "Get all"
      description: "Get all bookings"
      produces:
      - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BookingResponse"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /bookings/{id}:
    get:
      tags:
      - "Booking"
      summary: "Get one"
      description: "Get one specific booking"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Booking identifier"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BookingResponse"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - "Booking"
      summary: "Cancel"
      description: "Cancel one specific booking"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Booking identifier"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "No content"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
      - "Booking"
      summary: "Update"
      description: "Update one specific booking"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Booking identifier"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Booking object"
        required: true
        schema:
          $ref: "#/definitions/BookingRequest"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BookingResponse"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /bookings/availabilities:
    get:
      tags:
      - "Booking"
      summary: "Check availability"
      description: "Check the room's availability between specified dates"
      produces:
      - "application/json"
      parameters:
      - name: "startDate"
        in: "query"
        description: "Start date yyyy-MM-dd"
        required: true
        type: "string"
      - name: "endDate"
        in: "query"
        description: "End date yyyy-MM-dd"
        required: true
        type: "string"
      - name: "roomId"
        in: "query"
        description: "Room identifier"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Dates available"
        "409":
          description: "Dates unavailable"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  RoomResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      number:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price:
        type: "number"
  UserResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  BookingResponse:
    type: "object"
    properties:
      result: 
        type: "object"
        properties:
          id:
            type: "integer"
            format: "int64"
          user:
            $ref: "#/definitions/UserResponse"
          room:
            $ref: "#/definitions/RoomResponse"
          startDate:
            type: "string"
            example: "yyyy-MM-dd"
          endDate:
            type: "string"
            example: "yyyy-MM-dd"  
          status:
            type: "string"
            enum:
            - "ACTIVE"
            - "CANCELED"
  BookingRequest:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
      roomId:
        type: "integer"
        format: "int32"
      startDate:
        type: "string"
        example: "yyyy-MM-dd"
      endDate:
        type: "string"
        example: "yyyy-MM-dd"
  ErrorResponse:
    type: "object"
    properties:
      messages:
        type: "array"
        items: 
          type: "string"